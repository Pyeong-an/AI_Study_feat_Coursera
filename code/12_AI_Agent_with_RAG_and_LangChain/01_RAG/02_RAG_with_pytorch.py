from tqdm import tqdm
import numpy as np
import torch
from sklearn.manifold import TSNE
import matplotlib.pyplot as plt

# You can also use this section to suppress warnings generated by your code:
def warn(*args, **kwargs):
    pass
import warnings
warnings.warn = warn
warnings.filterwarnings('ignore')

# t-SNE를 이용한 3D 시각화 함수 정의
def tsne_plot(data, plot):
    # t-SNE를 사용해 3차원으로 차원 축소
    tsne = TSNE(n_components=3, random_state=42,
                perplexity=min(50, data.shape[0] - 1))  # 데이터 크기에 따라 perplexity 조정
    data_3d = tsne.fit_transform(data)

    # 3D 플롯 생성
    fig = plt.figure(figsize=(10, 7))
    ax = fig.add_subplot(111, projection='3d')

    # 색상 팔레트 생성
    colors = plt.cm.rainbow(np.linspace(0, 1, len(data_3d)))
    for idx, point in zip(range(len(data_3d)), data_3d):
        ax.scatter(point[0], point[1], point[2], color=colors[idx], label=f'{plot} {idx + 1}')

    # 라벨과 제목 추가
    ax.set_xlabel('TSNE Component 1')
    ax.set_ylabel('TSNE Component 2')
    ax.set_zlabel('TSNE Component 3')
    plt.title('3D t-SNE Visualization of ' + plot + ' Embeddings')
    plt.legend(title=plot + ' Index', bbox_to_anchor=(1.05, 1), loc='upper left')
    plt.show()

# BERT 토크나이저 로드
from transformers import BertTokenizer
tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')

# 예시 입력 문장
input_text = [("This is an example sentence for BERT embeddings.", "How do you like it "),("There are other models")]

# 토큰화 및 인코딩
input_ids = tokenizer.batch_encode_plus(input_text, add_special_tokens=True, padding=True, truncation=True)
print(input_ids)

# 토큰을 다시 텍스트로 디코딩
text = tokenizer.decode(input_ids['input_ids'][0])
print(text)
print(f"length {len(text.split())}")

# 어텐션 마스크 출력
print(input_ids['attention_mask'])

# 디바이스 설정 (CUDA가 있으면 GPU 사용)
DEVICE = torch.device("cuda" if torch.cuda.is_available() else "cpu")
print(DEVICE)

# 토큰 인덱스와 마스크를 텐서로 변환
input_ids_tensors = torch.tensor(input_ids['input_ids']).to(DEVICE)
mask_tensors = torch.tensor(input_ids['attention_mask']).to(DEVICE)

# BERT 모델 로드
from transformers import BertModel
bert_model = BertModel.from_pretrained('bert-base-uncased')
bert_model.to(DEVICE)

# 입력을 모델에 넣어 임베딩 추출
word_embding = bert_model(input_ids_tensors, mask_tensors)

# 각 문장에 대한 평균 임베딩 저장 리스트
aggregated_mean_embeddings = []

# 배치의 각 입력에 대해 루프
for token_ids, attention_mask in tqdm(zip(input_ids['input_ids'], input_ids['attention_mask'])):
    token_ids_tensor = torch.tensor([token_ids]).to(DEVICE)
    attention_mask_tensor = torch.tensor([attention_mask]).to(DEVICE)
    print("token_ids_tensor shape:", token_ids_tensor.shape, attention_mask_tensor.shape)

    with torch.no_grad():
        embeddings = bert_model(token_ids_tensor, attention_mask=attention_mask_tensor)[0].squeeze(0)
        print("Word embeddings shape:", embeddings.shape)

        num_zero_paddings = (attention_mask_tensor == 0).sum().item()
        print("Number of zero padding embeddings:", num_zero_paddings)

        valid_embeddings_mask = attention_mask_tensor[0] != 0
        print("valid_embeddings_mask:", valid_embeddings_mask)

        filtered_embeddings = embeddings[valid_embeddings_mask, :]
        print("Word embeddings after zero padding embeddings removed:", filtered_embeddings.shape)

        mean_embedding = filtered_embeddings.mean(axis=0)
        print("Mean embedding shape:", mean_embedding.shape)

        aggregated_mean_embeddings.append(mean_embedding.unsqueeze(0))

# 전체 평균 임베딩 텐서로 합치기
aggregated_mean_embeddings = torch.cat(aggregated_mean_embeddings)
print('All mean embeddings shape:', aggregated_mean_embeddings.shape)

# 토큰 인덱스와 마스크로부터 평균 임베딩을 계산하는 함수
def aggregate_embeddings(input_ids, attention_masks, bert_model=bert_model):
    mean_embeddings = []
    print('number of inputs', len(input_ids))
    for input_id, mask in tqdm(zip(input_ids, attention_masks)):
        input_ids_tensor = torch.tensor([input_id]).to(DEVICE)
        mask_tensor = torch.tensor([mask]).to(DEVICE)

        with torch.no_grad():
            word_embeddings = bert_model(input_ids_tensor, attention_mask=mask_tensor)[0].squeeze(0)
            valid_embeddings_mask = mask_tensor[0] != 0
            valid_embeddings = word_embeddings[valid_embeddings_mask, :]
            mean_embedding = valid_embeddings.mean(dim=0)
            mean_embeddings.append(mean_embedding.unsqueeze(0))

    aggregated_mean_embeddings = torch.cat(mean_embeddings)
    return aggregated_mean_embeddings

# 텍스트 리스트를 임베딩으로 변환
def text_to_emb(list_of_text, max_input=512):
    data_token_index = tokenizer.batch_encode_plus(list_of_text, add_special_tokens=True, padding=True, truncation=True, max_length=max_input)
    question_embeddings = aggregate_embeddings(data_token_index['input_ids'], data_token_index['attention_mask'])
    return question_embeddings

# 노래 전처리 함수
import re
def process_song(song):
    song_new = re.sub(r'[\n]', ' ', song)
    song_new = [song_new.replace("\'", "")]
    return song_new

# QA 질문 정의
song_questions = [
    "Does this song contain any violent themes, such as references to guns, killing, or physical aggression? Example: Does the song describe or promote physical violence, like fighting or shootings?",
    "Are there any explicit lyrics or bad words used in this song that might be considered offensive or inappropriate? Example: Does the song use language commonly recognized as profanity or derogatory terms?",
    "Is the overall content of this song suitable for children, considering its themes, language, and messages? Example: Are there elements in the song that could be deemed too mature or unsuitable for young listeners?",
    "Does this song explicitly mention weapons, such as guns, knives, or other similar items? Example: Are specific types of weapons described or glorified in the lyrics?",
    "Are the messages conveyed in this song positive and uplifting for children? Example: Does the song promote values like kindness, friendship, and positivity?",
    "Does this song include any sexual content, references to sexual behavior, or suggestive language? Example: Are there lyrics that explicitly or implicitly discuss sexual themes or experiences?",
    "Does this song offer any educational value, such as teaching the alphabet, basic math, or other learning content? Example: Are there educational segments in the song that could help children learn fundamental skills like the ABCs or counting?",
    "Does this song promote emotional resilience and social skills among children? Example: Does the song include themes of overcoming challenges or building friendships?"
]

# 질문 임베딩 생성
embeddings_questions = text_to_emb(song_questions)
tsne_plot(embeddings_questions, "Question")

# 긍정적인/부정적인 대답 예시
yes_responses = [
    "Yes, this song contains violent themes, including references to guns, killing, or physical aggression, and is not suitable for children.",
    "Yes, this song includes explicit lyrics or bad words that might be considered offensive or inappropriate for young audiences.",
    "No, the overall content of this song is not suitable for children as it includes themes, language, and messages that are too mature or unsuitable for young listeners.",
    "Yes, this song explicitly mentions weapons, such as guns and knives, which could be disturbing or inappropriate for children’s entertainment.",
    "Yes, the messages conveyed in this song are positive and uplifting, promoting values like kindness, friendship, and positivity, beneficial for children.",
    "Yes, this song includes sexual content and references to sexual behavior or suggestive language, which are inappropriate for a child-friendly environment.",
    "Yes, this song offers significant educational value, including segments that teach the alphabet, basic math, and other learning content, making it both fun and educational for children.",
    "Yes, this song promotes emotional resilience and social skills, incorporating themes about overcoming challenges and building friendships, which are essential for children's development."
]

# 답변 임베딩 생성
embeddings_responses = text_to_emb(yes_responses)
tsne_plot(embeddings_responses, "Response")

# 예시 노래 전처리 및 임베딩 생성
song_rage = """This time the bullet cold rocked ya yeah
A yellow ribbon instead of a swastika
Nothing proper about ya propaganda
Fools follow rules when the set command ya
Said it was blue when ya blood was read yeah
That's how you got a bullet blasted through ya head
Blasted through ya head blasted through ya head
I give a shout out to the living dead
Who stood and watched as the feds cold centralized
So serene on the screen he was mesmerized
Cellular the phones sounding a death tone
Corporations cold turn ya to stone before ya realize
They load the clip in omnicolour
Said they pack the 9 they fire it at prime time
The sleeping gas every home was like alcatraz
And mutha f**kas lost their minds
Just victims of the in house drive by
They say jump you say how high yeah
Just victims of the in house drive by
They say jump you say how high
Jumping sheld off
Yeh just cream for
Just victims of the in house drive by
They say jump you say how high yeah
Just victims of the in house drive by
They say jump you say how high
Checka checka check it out
Load load the clip wow each other
Said they pack the 9 they fire it at prime time
The sleeping gas every home was like alcatraz
And mutha f**kas lost their minds
No escape from the mass mind rape
Play it again jack and then rewind the tape
And then play it again and again and again
Until ya mind is locked in
Believing all the lies that they're telling ya
Buying all the products that they're selling ya
They say jump and ya say how high
Ya brain dead you got a f**king bullet in ya head
Just victims of the in house drive by
They say jump you say how high yeah
Just victims of the in house drive by
They say jump you say how high
Ya standing in line believing the lies
Ya bowing down to the flag ya got a bullet in ya head
Am i standing in line am i believing the lies
I'm bowing down to the flag i got a bullet in my head
Bullet in ya head bullet in ya head
Bullet in ya head bullet in ya head
A bullet in ya head a bullet in ya head
A bullet in ya head a bullet in ya head
A bullet in ya head a bullet in ya head
A bullet in ya head a bullet in ya head
A bullet in ya head a bullet in ya head
A bullet in ya head you gotta bullet in your f**king head
Yeah yeah"""
song_rage = process_song(song_rage)
embeddings_rage = text_to_emb(song_rage)
print(embeddings_rage.shape)

# 다른 노래 가사 예시
sesame_street = """
Sunny day
Sweepin' the clouds away
On my way to where the air is sweet
Can you tell me how to get
How to get to Sesame Street?

Come and play
Everything's A-okay
Friendly neighbors there
That's where we meet
Can you tell me how to get
How to get to Sesame Street?

It's a magic carpet ride
Every door will open wide
To happy people like you
Happy people like
What a beautiful

Sunny day
Sweepin' the clouds away
On my way to where the air is sweet
Can you tell me how to get
How to get to Sesame Street?
How to get to Sesame Street?
How to get to Sesame Street?
How to get to Sesame Street?
How to get to Sesame Street?
"""
song_sesame_street = process_song(sesame_street)
embeddings_sesame_street = text_to_emb(song_sesame_street)

straight_outta_compton_lyrics = """You are now about to witness the strength of street knowledge
Straight outta Compton, crazy motherfucker named Ice Cube
From the gang called Niggaz With Attitudes
When I'm called off, I got a sawed off
Squeeze the trigger, and bodies are hauled off
You too, boy, if ya fuck with me
The police are gonna have to come and get me
Off yo' ass, that's how I'm goin' out
For the punk motherfuckers, that's showin' out
Niggas start to mumble, they wanna rumble
Mix 'em and cook 'em in a pot like gumbo
Goin' off on a motherfucker like that
With a gat that's pointed at yo' ass
So give it up smooth
Ain't no tellin' when I'm down for a jack move
Here's a murder rap to keep yo' dancin'
With a crime record like Charles Manson
AK-47 is the tool
Don't make me act the motherfuckin' fool
Me you can go toe to toe, no maybe
I'm knockin' niggas out tha box daily
Yo, weekly, monthly and yearly
Until them dumb motherfuckers see clearly
That I'm down with the capital C-P-T
Boy, you can't fuck with me
So when I'm in your neighborhood, you better duck
'Cause Ice Cube is crazy as fuck
As I leave, believe I'm stompin'
But when I come back, boy, I'm comin' straight outta Compton
Yo, Ren
Whassup?
Tell 'em where you from!
Straight outta Compton, another crazy ass nigga
More punks I smoke, yo, my rep gets bigger
I'm a bad motherfucker and you know this
But the pussy ass niggas don't show this
But I don't give a fuck, I'ma make my snaps
If not from the records, from jackin' the crops
Just like burglary, the definition is jackin'
And when illegally armed, it's called 'packin'
Shoot a motherfucker in a minute
I find a good piece o' pussy, I go up in it
So if you're at a show in the front row
I'ma call you a bitch or dirty-ass ho
You'll probably get mad like a bitch is supposed to
But that shows me, slut, you're composed to
A crazy motherfucker from the street
Attitude legit 'cause I'm tearin' up shit
MC Ren controls the automatic
For any dumb motherfucker that starts static
Not the right-hand 'cause I'm the hand itself
Every time I pull a AK off the shelf
The security is maximum and that's a law
R-E-N spells Ren but I'm raw
See, 'cause I'm the motherfuckin' villain
The definition is clear, you're the witness of a killin'
That's takin' place without a clue
And once you're on the scope, your ass is through
Look, you might take it as a trip
But a nigga like Ren is on a gangsta tip
Straight outta Compton
Eazy is his name, and the boy is comin'
Straight outta Compton
Is a brother that'll smother yo' mother
And make ya sister think I love her
Dangerous motherfucker raises hell
And if I ever get caught, I make bail
See, I don't give a fuck, that's the problem
I see a motherfuckin' cop, I don't dodge him
But I'm smart, lay low, creep a while
And when I see a punk pass, I smile
To me, it's kinda funny, the attitude showin' a nigga drivin'
But don't know where the fuck he's going, just rollin'
Lookin' for the one they call Eazy
But here's a flash, they never seize me
Ruthless! Never seen like a shadow in the dark
Except when I unload, see I'll get over the hesitation
And hear the scream of the one who got the last penetration
Give a little gust of wind and I'm jettin'
But leave a memory no one'll be forgettin'
So what about the bitch who got shot? Fuck her!
You think I give a damn about a bitch? I ain't a sucker!
This is the autobiography of the E, and if you ever fuck with me
You'll get taken by a stupid dope brother who will smother
Word to the motherfucker, straight outta Compton
Damn, that shit was dope!"""
straight_outta_compton_lyrics = process_song(straight_outta_compton_lyrics)
embeddings_compton = text_to_emb(straight_outta_compton_lyrics)

my_shoe_lyrics="""Barney is a dinosaur from our imagination
And when he's tall
He's what we call a dinosaur sensation
Barney's friends are big and small
They come from lots of places
After school they meet to play
And sing with happy faces
Barney shows us lots of things
Like how to play pretend
ABC's, and 123's
And how to be a friend
Barney comes to play with us
Whenever we may need him
Barney can be your friend too
If you just make-believe him!"""
my_shoe_lyrics = process_song(my_shoe_lyrics)
embeddings_my_shoe = text_to_emb(my_shoe_lyrics)

# 여러 노래 임베딩 한꺼번에 처리
songs = [song_rage, song_sesame_street, straight_outta_compton_lyrics, my_shoe_lyrics]
embeddings = [text_to_emb(song) for song in songs]
all_embeddings = np.vstack(embeddings)
tsne_plot(all_embeddings, "Song")

# 질문과 노래 임베딩 간 dot product 유사도 계산
dot_product = embeddings_questions @ embeddings_rage.T
dot_product = dot_product.reshape(-1)
sorted_indices = torch.argsort(dot_product, descending=True)
sorted_indices = sorted_indices.tolist()

for indices in sorted_indices[0:3]:
    print(yes_responses[indices])

# RAG QA 시스템 구현 함수
def RAG_QA(embeddings_questions, embeddings, n_responses=3):
    dot_product = embeddings_questions @ embeddings.T
    dot_product = dot_product.reshape(-1)
    sorted_indices = torch.argsort(dot_product, descending=True)
    sorted_indices = sorted_indices.tolist()
    for index in sorted_indices[:n_responses]:
        print(yes_responses[index])

# 각 노래에 대해 QA 결과 출력
RAG_QA(embeddings_questions, embeddings_rage)
RAG_QA(embeddings_questions, embeddings_sesame_street)
RAG_QA(embeddings_questions, embeddings_compton)
RAG_QA(embeddings_questions, embeddings_my_shoe)